
DEV_LAMBDA :=\
	Lambda_Syntax \
	Lambda_Big \
	Lambda_Pretty \
	Lambda_Combi \
	Lambda_Indexed \
	Lambda_PrettyErr \
	Lambda_CombiErr \
	Lambda_Typing \
	Lambda_Typing_PrettyErr_Sound \
	Lambda_Typing_CombiErr_Sound
 #	Lambda_Trace \

DEV_LAMBDAEXN :=\
	LambdaExn_Syntax \
	LambdaExn_Big \
	LambdaExn_Pretty \
	LambdaExn_Combi


DEV_LAMBDAEXNERR :=\
	LambdaExn_Interp \
	LambdaExn_CombiErr \
	LambdaExn_BigErr \
	LambdaExn_Interp_CombiErr_Match \
	LambdaExn_Interp_BigErr_Match

DEV_CORECAML :=\
	CoreCaml_Syntax \
	CoreCaml_Pretty \
	CoreCaml_Small \
	CoreCaml_Big

#	CoreCaml_Interp \

DEV_LAMBDAEXNSUM :=\
	LambdaExnSum_Syntax \
	LambdaExnSum_Pretty \
	LambdaExnSum_Combi \
	LambdaExnSum_Small \
	LambdaExnSum_Big \
	LambdaExnSum_EncodeExn \
	LambdaExnSum_EncodeExn_Big_Correct

#	LambdaExnSum_EncodeExn_Combi_Correct \
#	LambdaExnSum_EncodeExn_Small_Correct \

DEV_COMMAND :=\

#	Command_Syntax \
#	Command_Pretty \
#	Command_Small \

# TODO: sort at the end
FILES :=\
	Common \
	LibHeap \
	$(DEV_CORECAML) \
	$(DEV_COMMAND) \
	$(DEV_LAMBDAEXNSUM) \
	$(DEV_LAMBDAEXNERR) \
	$(DEV_LAMBDAEXN) \
	$(DEV_LAMBDA)

VFILES=$(FILES:=.v)

############################################################################
# Usage
#
# make -j all
# make install
# make clean
# make uninstall

############################################################################
# Configuration

# Optional configuration file for setting, e.g., COQBIN. (Use /home/foo, not ~/).
-include settings.sh

ifneq (,$(COQBIN))
COQBIN:=$(COQBIN)/
endif

export COQBIN

# The desired warnings are set in _CoqProject.

############################################################################
# Compilation using the Makefile generated by coq_makefile.

-include Makefile.generated

Makefile.generated:
	@ $(COQBIN)coq_makefile -f _CoqProject $(VFILES) -o $@


############################################################################
# Clean rules

.PHONY: clean

clean::
	@ rm -f Makefile.generated Makefile.generated.conf
	@ rm -rf .lia.cache
	@ rm -rf *.v.d .*.aux

