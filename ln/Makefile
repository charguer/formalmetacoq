

############################################################################
# STABLE DEVELOPMENTS

CORE :=\
	STLC_Core_Definitions \
	STLC_Core_Infrastructure \
	STLC_Core_Soundness \
	STLC_Core_Safety \
	STLC_Core_Adequacy \
	STLC_Core_FullBeta \
	STLC_Core_Light \
	STLC_Core_Tutorial
BIG :=\
	BigStep_Definitions \
	BigStep_Infrastructure \
	BigStep_Equivalence
FSUB :=\
	Fsub_Definitions \
	Fsub_Infrastructure \
	Fsub_Soundness
COC :=\
	CoC_Definitions \
	CoC_Infrastructure \
	CoC_BetaStar \
	CoC_ChurchRosser \
	CoC_Conversion \
	CoC_Preservation
ML :=\
	ML_Definitions \
	ML_Infrastructure \
	ML_Soundness
EXN :=\
	STLC_Exn_Definitions \
	STLC_Exn_Infrastructure \
	STLC_Exn_Soundness
REF :=\
	STLC_Ref_Definitions \
	STLC_Ref_Infrastructure \
	STLC_Ref_Soundness_Common \
	STLC_Ref_Soundness_Small \
	STLC_Ref_Soundness_OmniSmall \
	STLC_Ref_Soundness_OmniBig
CPS :=\
	CPS_Definitions \
	CPS_Infrastructure \
	CPS_Correctness
LAMBDA :=\
	Lambda_Definitions \
	Lambda_Infrastructure \
	Lambda_ChurchRosser
JAR :=\
	Lambda_JAR_paper
ISK :=\
   ISK_Confluence

BASEFILES := $(CORE) $(BIG) $(EXN) $(REF) $(CPS) $(ISK) $(LAMBDA) $(COC) $(ML) $(FSUB) $(JAR)

VFILES=$(BASEFILES:=.v)


############################################################################
# Compilation using the Makefile generated by coq_makefile.

# The desired warnings are set in _CoqProject.

-include Makefile.generated

Makefile.generated:
	@ $(COQBIN)coq_makefile -f _CoqProject $(VFILES) -o $@


############################################################################
# Clean rules

.PHONY: clean

clean::
	@ rm -f Makefile.generated Makefile.generated.conf
	@ rm -rf .lia.cache
	@ rm -rf *.v.d .*.aux


##############################################################
# Other goals

core: $(CORE:=.vok)
big: $(BIG:=.vok)
mut: $(MUT:=.vok)
fsub: $(FSUB:=.vok)
coc: $(COC:=.vok)
ml: $(ML:=.vok)
exn: $(EXN:=.vok)
ref: $(REF:=.vok)
corewf: $(COREWF:=.vok)
data: $(DATA:=.vok)
cps: $(CPS:=.vok)
isk: $(ISK:=.vok)
pat: $(PAT:=.vok)
patopen: $(PATOPEN:=.vok)
lambda: $(LAMBDA:=.vok)
mlcore: $(MLCORE:=.vok)

